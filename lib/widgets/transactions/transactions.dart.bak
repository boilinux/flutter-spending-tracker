import 'package:flutter/material.dart';
// import '../displaylist/displaylist.dart';
import '../../models/transaction.dart';
import '../form/formspending.dart';
import '../chart/chart.dart';
import '../displaylist/dateDisplay.dart';
import '../displaylist/priceDisplay.dart';
import '../displaylist/titleDisplay.dart';

class Transactions extends StatefulWidget {
  @override
  _TransactionsState createState() => _TransactionsState();
}

class _TransactionsState extends State<Transactions> {
  final titleController = TextEditingController();
  final amountController = TextEditingController();

  void startAddNewTransaction(BuildContext ctx) {
    showModalBottomSheet(
      context: ctx,
      builder: (_) {
        return GestureDetector(
          onTap: () {},
          child: FormSpending(
            inputTitleController: titleController,
            inputAmountController: amountController,
            submitFormHandler: _submitFormSpending,
          ),
          behavior: HitTestBehavior.opaque,
        );
      },
    );
  }

  final List<Transaction> _transactions = [
    Transaction(
      id: 't1',
      title: 'New shoes',
      amount: 55.99,
      date: DateTime.now(),
    ),
    Transaction(
      id: 't2',
      title: 'New shirt',
      amount: 44.99,
      date: DateTime.now(),
    ),
    Transaction(
      id: 't3',
      title: 'New Jeans',
      amount: 15.99,
      date: DateTime.now(),
    ),
  ];



  @override
  Widget build(BuildContext context) {
    return Container(
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: <Widget>[
          Chart(),
          FormSpending(
            inputTitleController: titleController,
            inputAmountController: amountController,
            submitFormHandler: _submitFormSpending,
          ),
          Container(
            height: 500,
            width: double.infinity,
            child: ListView.builder(
              itemBuilder: (e, index) {
                return Card(
                  child: Row(children: <Widget>[
                    PriceDisplay(
                      amount: _transactions[index].amount.toStringAsFixed(2),
                    ),
                    Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: <Widget>[
                        TitleDisplay(title: _transactions[index].title),
                        DateDisplay(date: _transactions[index].date),
                      ],
                    ),
                  ]),
                );
              },
              itemCount: _transactions.length,
            ),
          ),
        ],
      ),
    );
  }
}
